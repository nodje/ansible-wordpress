---
- name: Setup the server for a full wordpress instance
  hosts: domain-host
  gather_facts: yes
  become: yes
  vars:
    http_port: 80
    max_clients: 200
    fqdn_ns: "{{ lookup('dig', '{{ domain }}', 'qtype=NS') }}"
    fqdn_a: "{{ lookup('dig', '{{ fqdn }}', '@{{ fqdn_ns }}') }}"
    get_letsencrypt_certs: "{% if groups['domain-host'][0] == fqdn_a and ansible_ssh_extra_args is not defined %}True{% else %}False{% endif %}"
    wp_install_dir: "{% if wp_old_domain is defined %}/var/www/{{ local_hostname }}.{{ wp_old_domain }}{% else %}/var/www/{{ fqdn }}{% endif %}"
    remote_git: "{% if wp_old_domain is defined %}{{ git_provider_accountname }}@bitbucket.org:{{ git_provider_accountname }}/{{ local_hostname }}.{{ wp_old_domain }}.git{% else %}{{ git_provider_accountname }}@bitbucket.org:{{ git_provider_accountname }}/{{ fqdn }}.git{% endif %}"
  tasks:
    - debug: var=ansible_ssh_extra_args
    - debug: msg="Wordpress installation dir will be {{ wp_install_dir }}"
    - debug: msg="Git remote folder will be {{ remote_git }}"
    - debug: msg="ansible_memtotal_mb={{ ansible_memtotal_mb }}, ansible_swaptotal_mb={{ ansible_swaptotal_mb }}"
    - debug: msg="Domain {{ domain }} nameservers are {{ fqdn_ns }}"
    - debug: msg="IP for the fqdn {{ fqdn }} is {{ fqdn_a }}"
    - debug: msg="Will Letsencrypt certificate be activated? {{ get_letsencrypt_certs }}"
    - include_role:
        name: swapfile
      become: yes
      when: ansible_swaptotal_mb < swapfile_size # @TODO: this means we cannot reduce the swapfile size
    - include_role:
        name: common
      become: yes
    - include_role:
        name: fqdn
      become: yes
      vars:
        fqdn: "{{ domain }}"
        hostname: "{{ project_name }}"
        public_ip: "{{ groups['domain-host'][0] }}"
    - include_role:
        name: logwatch
      become: yes
      vars:
        logwatch_email: "root@localhost"  # Email Address which Logwatch reports to
        logwatch_detail: "low"            # The level of detail in the Logwatch report
        logwatch_range: "yesterday"       # The default time range for the Logwatch report
        logwatch_output: "stdout"         # The output method of the Logwatch report
        logwatch_format: "text"           # The format of the Logwatch report
        logwatch_cron_time: "daily"       # Cron special time specification nickname - must match with logwatch range!
    - include_role:
        name: mysql
      become: yes
      vars:
        mysql_root_password: "{{ project_mysql_root_password }}"
    - include_role:
        name: nginx
      become: yes
    - include_role:
        name: postfix
      become: yes
      vars:
        postfix_myhostname: "{{ fqdn }}"
        postfix_local_user_relay_address: "{{ admin_email }}"
        postfix_smtp_sasl_security_options: "noanonymous"
        postfix_relayhost: "{{ email_relayhost }}"
        postfix_smtp_sasl_user: "{{ email_smtp_sasl_user }}"
        postfix_smtp_sasl_password: "{{ email_smtp_sasl_password }}"
    - copy:
        content: |
          {{ admin_email }}
        dest: /root/.forward
    - include_role:
        name: letsencrypt
      become: yes
      when: get_letsencrypt_certs
      #when: groups['domain-host'][0] == fqdn_a # this test requires that the inventory group 'domain-host' be populated dynamically by a cloud script or manually as IP
      vars:
        letsencrypt_email: "{{ admin_email }}"
        letsencrypt_cert_domains:
          - "{{ fqdn }}"
        letsencrypt_renewal_command_args: '--renew-hook "systemctl restart nginx"'
    - include_role:
        name: php
      become: yes
    - include_role:
        name: wpcli
      become: yes
    - include_role:
        name: mywordpress
      become: yes
      vars:
        wp_remote_repo:
        wp_version: latest
        wp_install_dir: "/var/www/{{ fqdn }}"
        wp_db_name: "{{ project_name }}"
        wp_db_user: "{{ project_name }}"
        wp_db_root_pwd: "{{ project_mysql_root_password }}"
        wp_db_host: "localhost"
        wp_site_name: "{{ project_name }}"
